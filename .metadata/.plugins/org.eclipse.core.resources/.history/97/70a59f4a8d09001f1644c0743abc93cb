#include <stdint.h>

#ifndef DATA_PACKET_H
#define DATA_PACKET_H

// Dosya Bilgileri
#include "main.h"
#include "crc.h"
#include "spi.h"
#include "usart.h"
#include "usb.h"
#include "gpio.h"

// Dosya AdÄ± ve Versiyon Bilgisi
#define DOSYA_ADI "data_packet.h"
#define VERSIYON "2.0"

// Yazar Bilgisi
#define YAZAR "MertRonom9"

//
//
//
//
//
//

#define convert8bitto16bit(x, y)  (((x) << 8) | (y))
#define convert16bittoLSB(x) ((x) & 255)
#define convert16bittoMSB(x) ((x) >> 8)


#define CRC_TYPE_CCITT	0
#define CRC_TYPE_IBM	1

//Polynomial = X^16 + X^12 + X^5 + 1
#define POLYNOMIAL_CCITT	0x1021
//Polynomial = X^16 + X^15 + X^2 + 1
#define POLYNOMIAL_IBM	0x8005

//Seeds
#define CRC_IBM_SEED	0xFFFF
#define CRC_CCITT_SEED	0x1D0F

//typedef

typedef struct data_packet_t
{
	uint8_t c_stat;
	float altitude;
	float pressure;
	float bat_level;
	float latitude;
	float longtitude;
	uint16_t crc;
}Data_packet_transmit;

typedef struct data_packet_r
{
	uint8_t c_stat;//
	uint16_t altitude;//
	float pressure;//
	uint8_t bat_level;//
	float latitude;
	float longtitude;
	uint16_t crc;
}Data_packet_recieve;

typedef union {
    float f;
    uint8_t u[4];
} FloatUInt8Union;


// Fonksiyon Prototipleri
void transmit_data_packet(Data_packet_transmit* transmit_data, uint8_t *buffer);
uint8_t recive_data_packet(Data_packet_recieve* recieve_data, uint8_t *buffer);
uint16_t RF95_ComputeCRC(uint8_t *buffer, uint8_t bufferLength, uint8_t crcType);
uint16_t ComputeCRC(uint16_t crc, uint8_t data, uint16_t polynomial);
void floatToUint8(float value, uint8_t *buffer, uint8_t i);
float uInt8ToFloat(float* value, uint8_t *buffer, uint8_t i);


#endif // FUNCTION_H
